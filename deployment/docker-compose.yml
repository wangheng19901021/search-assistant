version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: search-assistant-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: search_assistant
      MYSQL_USER: findthing
      MYSQL_PASSWORD: findthing123
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./configs/init-sql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_unicode_ci
            --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - search-assistant-network

  # 后端Spring Boot应用
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    container_name: search-assistant-backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/search_assistant?useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=utf8
      - SPRING_DATASOURCE_USERNAME=findthing
      - SPRING_DATASOURCE_PASSWORD=findthing123
      - JAVA_OPTS=-Xmx512m -Xms256m -Dfile.encoding=UTF-8 -Duser.timezone=Asia/Shanghai
    ports:
      - "8080:8080"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - search-assistant-network

  # 前端Nginx
  frontend:
    build:
      context: ../src/frontend
      dockerfile: Dockerfile
    container_name: search-assistant-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录（可选）
      - frontend_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - search-assistant-network

  # Redis缓存（可选，用于会话管理和缓存）
  redis:
    image: redis:7-alpine
    container_name: search-assistant-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis123456
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123456", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - search-assistant-network

# 数据卷定义
volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  frontend_logs:
    driver: local
  redis_data:
    driver: local

# 网络定义
networks:
  search-assistant-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16